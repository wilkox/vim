as.factorOrShinglefunctionfunctionlatticex	subsetTRUE	dropFALSE
as.shinglefunctionfunctionlatticex
axis.defaultfunctionfunctionlatticesidec("top", "bottom", "left", "right")	scales	components	as.table	labelsc("default", "yes", "no")	ticksc("default", "yes", "no")	...	prefixlattice.getStatus("current.prefix")
bankingfunctionfunctionlatticedx	dy1
barchartfunctionfunctionlatticex	data	...
barleydata.framedata.framelatticeNot a function
barley$yieldnumericnumericlatticeNot a function
barley$varietyfactorfactorlatticeNot a function
barley$yearfactorfactorlatticeNot a function
barley$sitefactorfactorlatticeNot a function
bwplotfunctionfunctionlatticex	data	...
canonical.themefunctionfunctionlatticename	colorname != "postscript"
cloudfunctionfunctionlatticex	data	...
col.whitebgfunctionfunctionlatticeNO_ARGS
contourplotfunctionfunctionlatticex	data	...
current.columnfunctionfunctionlatticeprefixlattice.getStatus("current.prefix")
current.panel.limitsfunctionfunctionlatticeunit"native"
current.rowfunctionfunctionlatticeprefixlattice.getStatus("current.prefix")
densityplotfunctionfunctionlatticex	data	...
diag.panel.splomfunctionfunctionlatticexNULL	varnameNULL	limits	atNULL	labelsNULL	drawTRUE	tick.number5	varname.coladd.text$col	varname.cexadd.text$cex	varname.lineheightadd.text$lineheight	varname.fontadd.text$font	varname.fontfamilyadd.text$fontfamily	varname.fontfaceadd.text$fontface	axis.text.colaxis.text$col	axis.text.alphaaxis.text$alpha	axis.text.cexaxis.text$cex	axis.text.fontaxis.text$font	axis.text.fontfamilyaxis.text$fontfamily	axis.text.fontfaceaxis.text$fontface	axis.text.lineheightaxis.text$lineheight	axis.line.colaxis.line$col	axis.line.alphaaxis.line$alpha	axis.line.ltyaxis.line$lty	axis.line.lwdaxis.line$lwd	axis.line.tck1	...
do.breaksfunctionfunctionlatticeendpoints	nint
dotplotfunctionfunctionlatticex	data	...
draw.colorkeyfunctionfunctionlatticekey	drawFALSE	vpNULL
draw.keyfunctionfunctionlatticekey	drawFALSE	vpNULL	...
environmentaldata.framedata.framelatticeNot a function
environmental$ozonenumericnumericlatticeNot a function
environmental$radiationnumericnumericlatticeNot a function
environmental$temperaturenumericnumericlatticeNot a function
environmental$windnumericnumericlatticeNot a function
equal.countfunctionfunctionlatticex	...
ethanoldata.framedata.framelatticeNot a function
ethanol$NOxnumericnumericlatticeNot a function
ethanol$CnumericnumericlatticeNot a function
ethanol$EnumericnumericlatticeNot a function
histogramfunctionfunctionlatticex	data	...
is.shinglefunctionfunctionlatticex
larrowsfunctionfunctionlatticex0NULL	y0NULL	x1	y1	x2NULL	y2NULL	angle30	code2	length0.25	unit"inches"	endsswitch(code, "first", "last", "both")	type"open"	coladd.line$col	alphaadd.line$alpha	ltyadd.line$lty	lwdadd.line$lwd	fillNULL	...	identifierNULL	name.type"panel"
lattice.getOptionfunctionfunctionlatticename
lattice.optionsfunctionfunctionlattice...
latticeParseFormulafunctionfunctionlatticemodel	data	dimension2	subsetTRUE	groupsNULL	multipleFALSE	outerFALSE	subscriptsFALSE	dropNULL
level.colorsfunctionfunctionlatticex	at	col.regions	colorsTRUE	...
levelplotfunctionfunctionlatticex	data	...
llinesfunctionfunctionlatticex	...
lplot.xyfunctionfunctionlatticexy	typec("p", "l", "o", "b", "c", "s", "S", "h", "H")	pch1	lty1	col1	cex1	lwd1	font1	fontfamilyNULL	fontfaceNULL	col.line	col.symbol	alpha1	fillNULL	origin0	...	identifierNULL	name.type"panel"
lpointsfunctionfunctionlatticex	...
lpolygonfunctionfunctionlatticex	yNULL	border"black"	col"transparent"	fillNULL	font	fontface	...	identifierNULL	name.type"panel"
lrectfunctionfunctionlatticexleft	ybottom	xright	ytop	x(xleft + xright)/2	y(ybottom + ytop)/2	widthxright - xleft	heightytop - ybottom	col"transparent"	border"black"	lty1	lwd1	alpha1	just"center"	hjustNULL	vjustNULL	...	identifierNULL	name.type"panel"
lsegmentsfunctionfunctionlatticex0NULL	y0NULL	x1	y1	x2NULL	y2NULL	coladd.line$col	alphaadd.line$alpha	ltyadd.line$lty	lwdadd.line$lwd	font	fontface	...	identifierNULL	name.type"panel"
ltextfunctionfunctionlatticex	...
ltransform3dMatrixfunctionfunctionlatticescreen	R.matdiag(4)
ltransform3dto3dfunctionfunctionlatticex	R.mat	dist0
make.groupsfunctionfunctionlattice...
melanomadata.framedata.framelatticeNot a function
melanoma$yearnumericnumericlatticeNot a function
melanoma$incidencenumericnumericlatticeNot a function
onewayfunctionfunctionlatticeformula	data	location	spreadfunction(x) sqrt(var(x))
packet.numberfunctionfunctionlatticeprefixlattice.getStatus("current.prefix")
packet.panel.defaultfunctionfunctionlatticelayout	condlevels	page	row	column	skip	all.pages.skipTRUE
panel.3dscatterfunctionfunctionlatticex	y	z	rot.matdiag(4)	distance	groupsNULL	type"p"	xlim	ylim	zlim	xlim.scaled	ylim.scaled	zlim.scaled	zero.scaled	col	col.pointif (is.null(groups)) plot.symbol$col else superpose.symbol$col	col.lineif (is.null(groups)) plot.line$col else superpose.line$col	ltyif (is.null(groups)) plot.line$lty else superpose.line$lty	lwdif (is.null(groups)) plot.line$lwd else superpose.line$lwd	cexif (is.null(groups)) plot.symbol$cex else superpose.symbol$cex	pchif (is.null(groups)) "+" else superpose.symbol$pch	cross	...	.scaleFALSE	subscriptsTRUE	identifier"3dscatter"
panel.3dwirefunctionfunctionlatticex	y	z	rot.matdiag(4)	distance	shadeFALSE	shade.colors.palettetrellis.par.get("shade.colors")$palette	light.sourcec(0, 0, 1000)	xlim	ylim	zlim	xlim.scaled	ylim.scaled	zlim.scaled	colif (shade) "transparent" else "black"	lty1	lwd1	alpha	col.groupssuperpose.polygon$col	polynum100	...	.scaleFALSE	drapeFALSE	at	col.regionsregions$col	alpha.regionsregions$alpha	identifier"3dwire"
panel.ablinefunctionfunctionlatticeaNULL	b0	hNULL	vNULL	regNULL	coefNULL	col	col.lineadd.line$col	ltyadd.line$lty	lwdadd.line$lwd	alphaadd.line$alpha	type	...	referenceFALSE	identifier"abline"
panel.arrowsfunctionfunctionlattice...
panel.averagefunctionfunctionlatticex	y	fun	horizontalTRUE	lwdreference.line$lwd	ltyreference.line$lty	col	col.linereference.line$col	type"l"	...	identifier"linejoin"
panel.axisfunctionfunctionlatticesidec("bottom", "left", "top", "right")	atpretty(scale.range)	labelsTRUE	draw.labelsTRUE	check.overlapFALSE	outsideFALSE	ticksTRUE	half!outside	which.halfswitch(side, bottom = "lower", left = "upper", top = "upper", 	which.half    right = "lower")	tckas.numeric(ticks)	rotif (is.logical(labels)) 0 else c(90, 0)	text.colaxis.text$col	text.alphaaxis.text$alpha	text.cexaxis.text$cex	text.fontaxis.text$font	text.fontfamilyaxis.text$fontfamily	text.fontfaceaxis.text$fontface	text.lineheightaxis.text$lineheight	line.colaxis.line$col	line.ltyaxis.line$lty	line.lwdaxis.line$lwd	line.alphaaxis.line$alpha
panel.barchartfunctionfunctionlatticex	y	box.ratio1	box.widthbox.ratio/(1 + box.ratio)	horizontalTRUE	originNULL	referenceTRUE	stackFALSE	groupsNULL	colif (is.null(groups)) plot.polygon$col else superpose.polygon$col	borderif (is.null(groups)) plot.polygon$border else superpose.polygon$border	ltyif (is.null(groups)) plot.polygon$lty else superpose.polygon$lty	lwdif (is.null(groups)) plot.polygon$lwd else superpose.polygon$lwd	...	identifier"barchart"
panel.brush.splomfunctionfunctionlatticethreshold18	verbosegetOption("verbose")	...
panel.bwplotfunctionfunctionlatticex	y	box.ratio1	box.widthbox.ratio/(1 + box.ratio)	horizontalTRUE	pchbox.dot$pch	colbox.dot$col	alphabox.dot$alpha	cexbox.dot$cex	fontbox.dot$font	fontfamilybox.dot$fontfamily	fontfacebox.dot$fontface	fillbox.rectangle$fill	varwidthFALSE	notchFALSE	notch.frac0.5	...	levels.fosif (horizontal) sort(unique(y)) else sort(unique(x))	stats	coef1.5	do.outTRUE	identifier"bwplot"
panel.cloudfunctionfunctionlatticex	y	subscripts	z	groupsNULL	perspectiveTRUE	distanceif (perspective) 0.2 else 0	xlim	ylim	zlim	panel.3d.cloud"panel.3dscatter"	panel.3d.wireframe"panel.3dwire"	screenlist(z = 40, x = -60)	R.matdiag(4)	aspectc(1, 1)	par.boxNULL	xlab	ylab	zlab	xlab.default	ylab.default	zlab.default	scales.3d	proportion0.6	wireframeFALSE	scpos	...	at	identifier"cloud"
panel.contourplotfunctionfunctionlattice...
panel.curvefunctionfunctionlatticeexpr	from	to	n101	curve.type"l"	coladd.line$col	ltyadd.line$lty	lwdadd.line$lwd	type	...	identifier"curve"
panel.densityplotfunctionfunctionlatticex	darglist(n = 30)	plot.points"jitter"	refFALSE	groupsNULL	weightsNULL	jitter.amount0.01 * diff(current.panel.limits()$ylim)	type"p"	...	identifier"density"
panel.dotplotfunctionfunctionlatticex	y	horizontalTRUE	pchif (is.null(groups)) dot.symbol$pch else sup.symbol$pch	colif (is.null(groups)) dot.symbol$col else sup.symbol$col	ltydot.line$lty	lwddot.line$lwd	col.linedot.line$col	levels.fosif (horizontal) unique(y) else unique(x)	groupsNULL	...	identifier"dotplot"
panel.errorfunctionfunctionlatticee
panel.fillfunctionfunctionlatticecoltrellis.par.get("background")$col	border"transparent"	...	identifier"fill"
panel.gridfunctionfunctionlatticeh3	v3	col	col.linereference.line$col	ltyreference.line$lty	lwdreference.line$lwd	xNULL	yNULL	...	identifier"grid"
panel.histogramfunctionfunctionlatticex	breaks	equal.widthsTRUE	type"density"	nintround(log2(length(x)) + 1)	alphaplot.polygon$alpha	colplot.polygon$col	borderplot.polygon$border	ltyplot.polygon$lty	lwdplot.polygon$lwd	...	identifier"histogram"
panel.identifyfunctionfunctionlatticex	yNULL	subscriptsseq_along(x)	labels	nlength(x)	offset0.5	threshold18	panel.argstrellis.panelArgs()	...
panel.identify.cloudfunctionfunctionlatticexpanel.args$x	ypanel.args$y	zpanel.args$z	subscriptspanel.args$subscripts	perspectiveTRUE	distanceif (perspective) 0.2 else 0	xlimpanel.args$xlim	ylimpanel.args$ylim	zlimpanel.args$zlim	screenlist(z = 40, x = -60)	R.matdiag(4)	aspectc(1, 1)	scales.3dpanel.args$scales.3d	...	panel.3d.identify	nlength(subscripts)	offset0.5	threshold18	labels	panel.argstrellis.panelArgs()
panel.identify.qqmathfunctionfunctionlatticexpanel.args$x	distributionpanel.args$distribution	groupspanel.args$groups	subscriptspanel.args$subscripts	labels	panel.argstrellis.panelArgs()	...
panel.levelplotfunctionfunctionlatticex	y	z	subscripts	atpretty(z)	shrink	labelsFALSE	label.stylec("mixed", "flat", "align")	contourFALSE	regionTRUE	coladd.line$col	ltyadd.line$lty	lwdadd.line$lwd	border"transparent"	border.lty1	border.lwd0.1	...	col.regionsregions$col	alpha.regionsregions$alpha	identifier"levelplot"
panel.levelplot.rasterfunctionfunctionlatticex	y	z	subscripts	atpretty(z)	...	col.regionsregions$col	alpha.regionsregions$alpha	interpolateFALSE	identifier"levelplot"
panel.linejoinfunctionfunctionlatticex	y	fun	horizontalTRUE	lwdreference.line$lwd	ltyreference.line$lty	col	col.linereference.line$col	type"l"	...	identifier"linejoin"
panel.linesfunctionfunctionlattice...
panel.link.splomfunctionfunctionlatticethreshold18	verbosegetOption("verbose")	...
panel.lmlinefunctionfunctionlatticex	y	...	identifier"lmline"
panel.loessfunctionfunctionlatticex	y	span2/3	degree1	familyc("symmetric", "gaussian")	evaluation50	lwdplot.line$lwd	ltyplot.line$lty	col	col.lineplot.line$col	type	horizontalFALSE	...	identifier"loess"
panel.mathdensityfunctionfunctionlatticedmath	argslist(mean = 0, sd = 1)	n50	col	col.linereference.line$col	lwdreference.line$lwd	ltyreference.line$lty	type	...	identifier"mathdensity"
panel.numberfunctionfunctionlatticeprefixlattice.getStatus("current.prefix")
panel.pairsfunctionfunctionlatticez	panellattice.getOption("panel.splom")	lower.panel	upper.panel	diag.panel"diag.panel.splom"	as.matrixFALSE	groupsNULL	panel.subscripts	subscripts	pscales5	prepanel.limits	varnamescolnames(z)	varname.coladd.text$col	varname.cexadd.text$cex	varname.fontadd.text$font	varname.fontfamilyadd.text$fontfamily	varname.fontfaceadd.text$fontface	axis.text.colaxis.text$col	axis.text.cexaxis.text$cex	axis.text.fontaxis.text$font	axis.text.fontfamilyaxis.text$fontfamily	axis.text.fontfaceaxis.text$fontface	axis.text.lineheightaxis.text$lineheight	axis.line.colaxis.line$col	axis.line.ltyaxis.line$lty	axis.line.lwdaxis.line$lwd	axis.line.alphaaxis.line$alpha	axis.line.tck1	...
panel.parallelfunctionfunctionlatticex	y	z	subscripts	groupsNULL	colsuperpose.line$col	lwdsuperpose.line$lwd	ltysuperpose.line$lty	alphasuperpose.line$alpha	common.scaleFALSE	lowersapply(z, function(x) min(as.numeric(x), na.rm = TRUE))	uppersapply(z, function(x) max(as.numeric(x), na.rm = TRUE))	...	horizontal.axisTRUE	identifier"parallel"
panel.pointsfunctionfunctionlattice...
panel.polygonfunctionfunctionlattice...
panel.qqfunctionfunctionlattice...	identifier"qq"
panel.qqmathfunctionfunctionlatticex	f.valueNULL	distribution	qtype7	groupsNULL	...	tails.n0	identifier"qqmath"
panel.qqmathlinefunctionfunctionlatticex	y	distribution	probsc(0.25, 0.75)	qtype7	groupsNULL	...	identifier"qqmathline"
panel.rectfunctionfunctionlattice...
panel.reflinefunctionfunctionlattice...
panel.rugfunctionfunctionlatticexNULL	yNULL	regularTRUE	startif (regular) 0 else 0.97	endif (regular) 0.03 else 1	x.unitsrep("npc", 2)	y.unitsrep("npc", 2)	colplot.line$col	col.line	ltyplot.line$lty	lwdplot.line$lwd	alphaplot.line$alpha	...	identifier"rug"
panel.segmentsfunctionfunctionlattice...
panel.smoothScatterfunctionfunctionlatticex	yNULL	nbin64	cuts255	bandwidth	colramp	nrpoints100	transformationfunction(x) x^0.25	pch"."	cex1	col"black"	range.x	...	rasterFALSE	subscripts	identifier"smoothScatter"
panel.splinefunctionfunctionlatticex	y	npoints101	lwdplot.line$lwd	ltyplot.line$lty	col	col.lineplot.line$col	type	horizontalFALSE	...	keep.dataFALSE	identifier"spline"
panel.splomfunctionfunctionlattice...	identifier"splom"
panel.stripplotfunctionfunctionlatticex	y	jitter.dataFALSE	factor0.5	amountNULL	horizontalTRUE	groupsNULL	...	identifier"stripplot"
panel.superposefunctionfunctionlatticex	yNULL	subscripts	groups	panel.groups"panel.xyplot"	...	col"black"	col.linesuperpose.line$col	col.symbolsuperpose.symbol$col	pchsuperpose.symbol$pch	cexsuperpose.symbol$cex	fillsuperpose.symbol$fill	fontsuperpose.symbol$font	fontfacesuperpose.symbol$fontface	fontfamilysuperpose.symbol$fontfamily	ltysuperpose.line$lty	lwdsuperpose.line$lwd	alphasuperpose.symbol$alpha	type"p"	gridFALSE	distribute.typeFALSE
panel.superpose.2functionfunctionlattice...	distribute.typeTRUE
panel.superpose.plainfunctionfunctionlattice...	colNA	col.lineplot.line$col	col.symbolplot.symbol$col	pchplot.symbol$pch	cexplot.symbol$cex	fillplot.symbol$fill	fontplot.symbol$font	fontfaceplot.symbol$fontface	fontfamilyplot.symbol$fontfamily	ltyplot.line$lty	lwdplot.line$lwd	alphaplot.symbol$alpha
panel.textfunctionfunctionlattice...
panel.tmd.defaultfunctionfunctionlatticex	y	groupsNULL	...	identifier"tmd"
panel.tmd.qqmathfunctionfunctionlatticex	f.valueNULL	distribution	qtype7	groupsNULL	subscripts	...	identifier"tmd"
panel.violinfunctionfunctionlatticex	y	box.ratio1	box.widthbox.ratio/(1 + box.ratio)	horizontalTRUE	alphaplot.polygon$alpha	borderplot.polygon$border	ltyplot.polygon$lty	lwdplot.polygon$lwd	colplot.polygon$col	varwidthFALSE	bwNULL	adjustNULL	kernelNULL	windowNULL	widthNULL	n50	fromNULL	toNULL	cutNULL	na.rmTRUE	...	identifier"violin"
panel.wireframefunctionfunctionlattice...
panel.xyplotfunctionfunctionlatticex	y	type"p"	groupsNULL	pchif (is.null(groups)) plot.symbol$pch else superpose.symbol$pch	col	col.lineif (is.null(groups)) plot.line$col else superpose.line$col	col.symbolif (is.null(groups)) plot.symbol$col else superpose.symbol$col	fontif (is.null(groups)) plot.symbol$font else superpose.symbol$font	fontfamilyif (is.null(groups)) plot.symbol$fontfamily else superpose.symbol$fontfamily	fontfaceif (is.null(groups)) plot.symbol$fontface else superpose.symbol$fontface	ltyif (is.null(groups)) plot.line$lty else superpose.line$lty	cexif (is.null(groups)) plot.symbol$cex else superpose.symbol$cex	fillif (is.null(groups)) plot.symbol$fill else superpose.symbol$fill	lwdif (is.null(groups)) plot.line$lwd else superpose.line$lwd	horizontalFALSE	...	gridFALSE	ablineNULL	jitter.xFALSE	jitter.yFALSE	factor0.5	amountNULL	identifier"xyplot"
parallelfunctionfunctionlatticex	data	...
parallelplotfunctionfunctionlatticex	data	...
prepanel.default.bwplotfunctionfunctionlatticex	y	horizontalTRUE	nlevels	originNULL	stackFALSE	...
prepanel.default.cloudfunctionfunctionlatticeperspectiveTRUE	distanceif (perspective) 0.2 else 0	xlim	ylim	zlim	screenlist(z = 40, x = -60)	R.matdiag(4)	aspectc(1, 1)	panel.aspect1	...	zoom0.8
prepanel.default.densityplotfunctionfunctionlatticex	darg	groupsNULL	weightsNULL	subscriptsTRUE	...
prepanel.default.histogramfunctionfunctionlatticex	breaks	equal.widthsTRUE	type"density"	nintround(log2(length(x)) + 1)	...
prepanel.default.levelplotfunctionfunctionlatticex	y	subscripts	...
prepanel.default.parallelfunctionfunctionlatticex	y	z	...	horizontal.axisTRUE
prepanel.default.qqfunctionfunctionlatticex	y	...
prepanel.default.qqmathfunctionfunctionlatticex	f.valueNULL	distribution	qtype7	groupsNULL	subscripts	...	tails.n0
prepanel.default.splomfunctionfunctionlatticez	...
prepanel.default.xyplotfunctionfunctionlatticex	y	type	subscripts	groupsNULL	...
prepanel.lmlinefunctionfunctionlatticex	y	...
prepanel.loessfunctionfunctionlatticex	y	span2/3	degree1	familyc("symmetric", "gaussian")	evaluation50	horizontalFALSE	...
prepanel.qqmathlinefunctionfunctionlatticex	y	distribution	probsc(0.25, 0.75)	qtype7	groupsNULL	subscriptsTRUE	...
prepanel.splinefunctionfunctionlatticex	y	npoints101	horizontalFALSE	...	keep.dataFALSE
prepanel.tmd.defaultfunctionfunctionlatticex	y	...
prepanel.tmd.qqmathfunctionfunctionlatticex	f.valueNULL	distribution	qtype7	groupsNULL	subscripts	...
qqfunctionfunctionlatticex	data	...
qqmathfunctionfunctionlatticex	data	...
rfsfunctionfunctionlatticemodel	layoutc(2, 1)	xlab"f-value"	ylabNULL	distribution	panelfunction(...) {	panel    panel.grid(h = -1, v = -1)	panel    panel.qqmath(...)	panel}	prepanelNULL	stripTRUE	...
Rowsfunctionfunctionlatticex	which
shinglefunctionfunctionlatticex	intervalssort(unique(x))
show.settingsfunctionfunctionlatticexNULL
simpleKeyfunctionfunctionlatticetext	pointsTRUE	rectanglesFALSE	linesFALSE	coladd.text$col	cexadd.text$cex	alphaadd.text$alpha	fontadd.text$font	fontfaceadd.text$fontface	fontfamilyadd.text$fontfamily	lineheightadd.text$lineheight	...
simpleThemefunctionfunctionlatticecol	alpha	cex	pch	lty	lwd	font	fill	border	col.points	col.line	alpha.points	alpha.line
singerdata.framedata.framelatticeNot a function
singer$heightnumericnumericlatticeNot a function
singer$voice.partfactorfactorlatticeNot a function
splomfunctionfunctionlatticex	data	...
standard.themefunctionfunctionlatticename	colorname != "postscript"
strip.customfunctionfunctionlattice...
strip.defaultfunctionfunctionlatticewhich.given	which.panel	var.name	factor.levels	shingle.intervalsNULL	strip.namesc(FALSE, TRUE)	strip.levelsc(TRUE, FALSE)	sep" : "	style1	horizontalTRUE	bgtrellis.par.get("strip.background")$col[which.given]	fgtrellis.par.get("strip.shingle")$col[which.given]	par.strip.texttrellis.par.get("add.text")
stripplotfunctionfunctionlatticex	data	...
tmdfunctionfunctionlatticeobject	...
trellis.currentLayoutfunctionfunctionlatticewhichc("packet", "panel")	prefixlattice.getStatus("current.prefix")
trellis.devicefunctionfunctionlatticedevicegetOption("device")	color!(dev.name == "postscript")	themelattice.getOption("default.theme")	newTRUE	retainFALSE	...
trellis.focusfunctionfunctionlatticename	columnstop("column must be specified")	rowstop("row must be specified")	sideNULL	clip.offFALSE	highlightinteractive()	...	prefix	guessTRUE	verbosegetOption("verbose")
trellis.grobnamefunctionfunctionlatticename	typec("", "panel", "strip", "strip.left", "key", "colorkey")	group0	which.givenlattice.getStatus("current.which.given", prefix = prefix)	which.panellattice.getStatus("current.which.panel", prefix = prefix)	columnlattice.getStatus("current.focus.column", prefix = prefix)	rowlattice.getStatus("current.focus.row", prefix = prefix)	prefixlattice.getStatus("current.prefix")
trellis.last.objectfunctionfunctionlattice...	prefixlattice.getStatus("current.prefix")
trellis.panelArgsfunctionfunctionlatticex	packet.number
trellis.par.getfunctionfunctionlatticenameNULL
trellis.par.setfunctionfunctionlatticename	value	...	theme	warnTRUE	strictFALSE
trellis.switchFocusfunctionfunctionlatticename	sideNULL	clip.offFALSE	highlight	...	prefix
trellis.unfocusfunctionfunctionlatticeNO_ARGS
trellis.vpnamefunctionfunctionlatticenamec("position", "split", "split.location", "toplevel", "figure", 	name    "panel", "strip", "strip.left", "legend", "legend.region", 	name    "main", "sub", "xlab", "ylab", "xlab.top", "ylab.right", 	name    "page")	columnlattice.getStatus("current.focus.column", prefix = prefix)	rowlattice.getStatus("current.focus.row", prefix = prefix)	sidec("left", "top", "right", "bottom", "inside")	clip.offFALSE	prefixlattice.getStatus("current.prefix")
which.packetfunctionfunctionlatticeprefixlattice.getStatus("current.prefix")
wireframefunctionfunctionlatticex	data	...
xscale.components.defaultfunctionfunctionlatticelim	packet.number0	packet.listNULL	topTRUE	...
xyplotfunctionfunctionlatticex	data	...
xyplot.tsfunctionfunctionlatticex	dataNULL	screensif (superpose) 1 else colnames(x)	...	superposeFALSE	cutFALSE	type"l"	colNULL	ltyNULL	lwdNULL	pchNULL	cexNULL	fillNULL	auto.key	panelif (superpose) "panel.superpose" else "panel.superpose.plain"	par.settingslist()	layoutNULL	as.tableTRUE	xlab"Time"	ylabNULL	default.scaleslist(y = list(relation = if (missing(cut)) "free" else "same"))
yscale.components.defaultfunctionfunctionlatticelim	packet.number0	packet.listNULL	rightTRUE	...
